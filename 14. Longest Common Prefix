//Write a function to find the longest common prefix string amongst an array of strings.

//If there is no common prefix, return an empty string "".

//Example 1:

//Input: strs = ["flower","flow","flight"]
//Output: "fl"
//Example 2:

//Input: strs = ["dog","racecar","car"]
//Output: ""
//Explanation: There is no common prefix among the input strings.
 

//Constraints:

//1 <= strs.length <= 200
//0 <= strs[i].length <= 200
//strs[i] consists of only lowercase English letters.



class Solution {
    public String longestCommonPrefix(String[] strs) {
         
        int size = strs.length;
        
        if(strs.length == 0) {
            return "";
        }
        if(strs.length == 1) {
            return strs[0];
        }
        Arrays.sort(strs);
       
        int a = Math.min(strs[0].length(), strs[size - 1].length());
        
        int i = 0;
        while (i < a && strs[0].charAt(i) == strs[size - 1].charAt(i) )
            i++;
        String pre = strs[0].substring(0, i);
        return pre;
        
        }
    }
